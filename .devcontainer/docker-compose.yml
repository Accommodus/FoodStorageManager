version: "3.9"

services:
  devcontainer:
    image: mcr.microsoft.com/devcontainers/typescript-node
    volumes:
      - ../..:/workspaces:cached
    command: sleep infinity
    working_dir: /workspaces/${localWorkspaceFolderBasename}
    depends_on:
      - client
      - server

  client:
    image: node:24
    working_dir: /workspaces/${localWorkspaceFolderBasename}/client
    volumes:
      - ../..:/workspaces:cached
      - client-node-modules:/workspaces/${localWorkspaceFolderBasename}/client/node_modules
    # Your script should run Vite with --host and the correct port
    command: sh -lc "npm ci && npm run dev"
    # Bind to host loopback only (not exposed to LAN)
    ports:
      - "127.0.0.1:5173:5173"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

  server:
    image: node:24
    working_dir: /workspaces/${localWorkspaceFolderBasename}/server
    volumes:
      - ../..:/workspaces:cached
      - server-node-modules:/workspaces/${localWorkspaceFolderBasename}/server/node_modules
    command: sh -lc "npm ci && npm run dev"
    # Bind to host loopback only (not exposed to LAN)
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      # App connects to Mongo via Docker DNS, not localhost
      MONGODB_URI: mongodb://dev:dev@db:27017/local?authSource=admin
      PORT: 3000
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - mongodb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: dev
      MONGO_INITDB_ROOT_PASSWORD: dev
      MONGO_INITDB_DATABASE: local
    
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 15s

volumes:
  mongodb-data:
  client-node-modules:
  server-node-modules:
